#!/usr/bin/env ruby
require 'rubygems'
require 'commander/import'
require 'freesound'
require 'awesome_print'
require 'httparty'
require 'os'
require 'terminal-table'

PLAYER = OS.linux? ? "mplayer" : "afplay"
DL_METHOD = OS.linux? ? "wget -O" : "curl -o"
IMG_VIEWER = OS.linux? ? "eog" : "qlmanage -p"

Freesound.api_key = ENV['FREESOUND_API_KEY']
client = Freesound::Client.new

program :name, 'freesound command line tool'
program :version, '0.1.20131214'
program :description, 'whatever, chump.'

command :grep do |c|
	c.syntax = 'fstool grep <keywords>'
	c.description = 'searches freesound'
	c.action do |args, options|
		query = args.join('+')
		results = client.search(query, f: "type:wav")
		rows = []
		results.each do |s|
			rows << [s.id, s.duration.round(2), s.original_filename]
		end
		puts Terminal::Table.new :headings =>
		['id', 'duration', 'filename'],
			:rows => rows
	end
end

command :info do |c|
	c.syntax = 'fstool info <id>'
	c.description = 'full info for single sample'
	c.action do  |args, options|
		sound = client.sound(args.first)
		ap sound.attributes
	end
end

command :anal do |c|
	c.syntax = 'fstool anal <id>'
	c.description = 'provides basic sample analysis, of course'
	c.action do |args, options|
		sound = client.sound(args.first)
		response = HTTParty.get(sound.analysis_frames)
		body = JSON.parse(response.body)
		#ap body['rhythm']['bpm']
		# ap body['tonal']['key_key']
		body['rhythm'].select do |k,v|
			puts "#{k.ljust(20)} #{v}" if k =~ /bpm/
		end
		body['tonal'].select do |k,v|
			puts "#{k.ljust(20)} #{v}" if k =~ /key|scale|progression/
		end
	end
end

command :play  do |c|
	c.syntax = 'fstool play <id>'
	c.description = 'previews the sample'
	c.action do |args, options|
		sound = client.sound(args.first)
		filename = "./temp.mp3"
		source = sound.preview_lq_mp3
		system "#{DL_METHOD} #{filename} #{source}"
		system "#{PLAYER} #{filename} -d"
		File.delete(filename)
	end
end

command :dl do |c|
	c.syntax = 'fstool dl <id>'
	c.description = 'downloads the sample'
	c.action do |args, options|
		dir = ask "sample folder name:"
		system "mkdir ./#{dir}" unless File.directory? dir
		sound = client.sound(args.first)
		filename = "./#{dir}/#{CGI::escape(sound.original_filename.downcase).slice(0...-4)}.wav"
		source = "#{sound.serve}?api_key=#{ENV['FREESOUND_API_KEY']}"
		system "#{DL_METHOD} #{filename} #{source}"
		puts "WAV downloaded: #{filename}"
	end
end

command :img do |c|
	c.syntax = 'fstool img <id>'
	c.description = 'previews the waveform'
	c.action do |args, options|
		sound = client.sound(args.first)
		filename = "./temp.png"
		source = sound.waveform_l
		system "#{DL_METHOD} #{filename} #{source}"
		system "#{IMG_VIEWER} #{filename}"
		File.delete(filename)
	end
end
